name: release-m5stack-binaries
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:release-v5.3
    env:
      CI_BUILD: 1
    timeout-minutes: 30
    steps:
    - name: Release version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
      with:
        ref: '${{ github.ref }}'
        submodules: recursive
    - name: Build AtomS3 image
      run: |
        . $IDF_PATH/export.sh
        rm -rf build sdkconfig
        SDKCONFIG_DEFAULTS="sdkconfig.defaults;sdkconfig.defaults.atoms3" idf.py set-target esp32-s3
        idf.py build
        python script/pack_firmware.py oai_res_example.atoms3.bin
      working-directory: .
    - name: Build CoreS3 image
      run: |
        . $IDF_PATH/export.sh
        rm -rf build sdkconfig
        SDKCONFIG_DEFAULTS="sdkconfig.defaults;sdkconfig.defaults.cores3" idf.py set-target esp32-s3
        idf.py build
        python script/pack_firmware.py oai_res_example.cores3.bin
      working-directory: .
    - name: Build Atom Lite image
      run: |
        . $IDF_PATH/export.sh
        rm -rf build sdkconfig
        SDKCONFIG_DEFAULTS="sdkconfig.defaults;sdkconfig.defaults.atom_lite" idf.py set-target esp32
        idf.py build
        python script/pack_firmware.py oai_res_example.atom_lite.bin
      working-directory: .
    - name: Collect images
      run: |
        zip oai_res_example.$RELEASE_VERSION.zip oai_res_example.*.bin
      working-directory: .
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: oai_res_example.${{ env.RELEASE_VERSION }}.zip
        asset_name: oai_res_example.${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/zip